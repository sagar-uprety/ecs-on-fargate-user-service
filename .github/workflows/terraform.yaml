---
# .github/workflows/terraform.yaml
name: Terraform - validation
run-name: '[${{ github.event_name }} - ${{ github.ref_name }}] Terraform executed by @${{ github.actor }}'

on:
  push:
    paths-ignore:
      - '.github/workflows/release.yml'
      - 'CHANGELOG.md'
    branches:
      - '**'
  pull_request:
    paths-ignore:
      - '.github/workflows/release.yml'
      - 'CHANGELOG.md'
    branches:
      - main

permissions:
  id-token: write
  contents: read
  pull-requests: write

env:
  terraformVersion: 1.3.6
  terraformWorkDir: ./examples/resource
  terraformS3Key: ${{ github.repository}}/${{ github.ref_name}}
  terraformModulesGithubOrg: ${{ github.repository_owner}}
  terraformBucket: terraform-module-state-files
  terraformDynamo: terraform-module-state-files

  awsRegion: us-east-1
  githubToken: ${{ secrets.ADEX_GITHUB_TOKEN }}
  awsIamRoleSessionDuration: 7200


jobs:
  lint:
    name: Lint
    runs-on: ubuntu-20.04

    steps:

      - name: Check out code
        uses: actions/checkout@v3

      - name: Install JQ Tool
        uses: mbround18/install-jq@v1

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.terraformVersion }}
          terraform_wrapper: false

      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: arn:aws:iam::${{ secrets.ADEX_POC }}:role/github_oidc
          role-session-name: OIDCSession
          aws-region: ${{ env.awsRegion }}
          role-duration-seconds: ${{ env.awsIamRoleSessionDuration }}

      - name: Setup git repo credentials for terraform modules
        run: |
          git config --global \
          url."https://git:${{ env.githubToken }}@github.com/${{ env.terraformModulesGithubOrg }}".insteadOf \
          "https://github.com/${{ env.terraformModulesGithubOrg }}"
        shell: sh

      - name: Terraform Initialize
        id: init
        run: |
          cd ${{ env.terraformWorkDir }}
          terraform init -backend-config="bucket=${{ env.terraformBucket }}" -backend-config="dynamodb_table=${{ env.terraformDynamo }}" -backend-config="key=${{ env.terraformS3Key}}" -backend-config="region=${{ env.awsRegion }}"

      - name: Terraform Format
        run: terraform fmt --check

      - name: Terraform Validate
        run: |
          cd ${{ env.terraformWorkDir }}
          terraform validate
